@model PoHeader

@{
    string currentModel = Helper.GetTypeName(Model.GetType().ToString());
    ViewData["Title"] = @currentModel + " Create";
}


<div class="card">

    <div class="card-header bg-success text-uppercase text-white text-center mb-2 pt-0" style="height:40px;">
        <h1>@currentModel Create</h1>
    </div>

    <form asp-action="Create">
        <div class="col-12 btn-group">
            <div class="row col-11 ml-2">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="row">
                    <div class="form-group col-2 p-3">
                        <label asp-for="PoNumber" class="control-label"></label>
                    </div>
                    <div class="form-group col-3 p-3">
                        <input asp-for="PoNumber" class="form-control" readonly />
                        <span asp-validation-for="PoNumber" class="text-danger"></span>
                    </div>

                    <div class="form-group col-2 p-3"></div>

                    <div class="form-group col-2 p-3">
                        <label asp-for="SupplierId" class="control-label"></label>
                    </div>
                    <div class="form-group col-3 p-3">
                        <select asp-for="SupplierId" class="form-control" asp-items="ViewBag.Suppliers"></select>
                        <span asp-validation-for="SupplierId" class="text-danger"></span>
                    </div>

                </div>

                <div class="row">
                    <div class="form-group col-2 p-3">
                        <label asp-for="PoCurrencyId" class="control-label"></label>
                    </div>
                    <div class="form-group col-3 p-3">
                        <select asp-for="PoCurrencyId" class="form-control" asp-items="ViewBag.PoCurrencies" onclick="getExRate(this)"></select>
                        <span asp-validation-for="PoCurrencyId" class="text-danger"></span>
                    </div>

                    <div class="form-group col-2 p-3"></div>

                    <div class="form-group col-2 p-3">
                        <label asp-for="ExchangeRate" class="control-label"></label>
                    </div>
                    <div class="form-group col-3 p-3">
                        <input asp-for="ExchangeRate" class="form-control" id="txtExtrateRate" readonly />
                        <span asp-validation-for="ExchangeRate" class="text-danger"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-2 p-3">
                        <label asp-for="QuotationNo" class="control-label"></label>
                    </div>
                    <div class="form-group col-3 p-3">
                        <input asp-for="QuotationNo" class="form-control" />
                        <span asp-validation-for="QuotationNo" class="text-danger"></span>
                    </div>

                    <div class="form-group col-2 p-3"></div>

                    <div class="form-group col-2 p-3">
                        <label asp-for="QuotationDate" class="control-label"></label>
                    </div>
                    <div class="form-group col-3 p-3">
                        <input asp-for="QuotationDate" class="form-control" />
                        <span asp-validation-for="QuotationDate" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-12 ml-5">
                    <table id="CodesTable" class="table table-borderless table-sm mb-0 pb-0">
                        <thead>
                            <tr>
                                <th>
                                    Product
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th>
                                    FOB
                                </th>
                                <th>
                                    Price
                                </th>
                                <th>
                                    Unit
                                </th>
                                <th style="width:60px;">
                                    <button id="btnAddDetailRow" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)">
                                        Add
                                    </button>
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.PoDetails.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <select asp-for="@Model.PoDetails[i].ProductCode" class="form-control" asp-items="ViewBag.Products"></select>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.PoDetails[i].Quantity" class="form-control" />
                                        <span asp-validation-for="@Model.PoDetails[i].Quantity"></span>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.PoDetails[i].Fob" class="form-control" />
                                        <span asp-validation-for="@Model.PoDetails[i].Fob"></span>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.PoDetails[i].PrcInBaseCur" class="form-control" />
                                        <span asp-validation-for="@Model.PoDetails[i].PrcInBaseCur"></span>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.PoDetails[i].UnitName" class="form-control" readonly />
                                    </td>
                                    <th style="width:60px;">
                                        <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible" onclick="DeleteItem(this)">
                                            Delete
                                        </button>
                                    </th>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>

            <div class="form-group btn-group col-1">
                <select asp-items="ViewBag.ExchangeRate" id="dropdownExRate" class="form-control" size="1" style="visibility: hidden">
                </select>
            </div>
        </div>


        <div class="col-12 form-group btn-group mt-2">
            <input type="submit" value="Create" class="btn btn-primary" />
            <a class="btn btn-secondary" asp-action="Index" asp-route-currentPage="@TempData.Peek("CurrentPage")">Back</a>
        </div>

    </form>

</div>





@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        function AddItem(btn) {
            var table;
            table = document.getElementById('CodesTable');
            var rows = table.getElementsByTagName('tr');
            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = rows.length - 2;
            var nextrowIdx = eval(lastrowIdx) + 1;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var x = document.getElementsByTagName('INPUT');

            for (var cnt = 0; cnt < x.length; cnt++) {
                if (x[cnt].type == "text" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0) {
                    if (x[cnt].id.indexOf('Unit') == 0) {
                        x[cnt].value = '';
                    }
                }
                else if (x[cnt].type == "number" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0) {
                    x[cnt].value = 0;
                }
            }

            

        }
        function DeleteItem(btn) {

            var table = document.getElementById('CodesTable');
            var rows = table.getElementsByTagName('tr');

            var visibleRowsCount = 0;
            var x = document.querySelectorAll("[id*='Quantity']");

            for (i = 0; i < x.length; i++) {
                if (x[i].value > 0)
                    visibleRowsCount++;
            }


            if (visibleRowsCount <= 1) {
                alert("This Row Cannot Be Deleted");
                return;
            }


            // $(btn).closest('tr').remove();

            var btnIdx = btn.id.replaceAll('btnremove-', '');
            var idOfQuantity = btnIdx + "__Quantity";
            var txtQuantity = document.querySelector("[id$='" + idOfQuantity + "']");
            txtQuantity.value = 0;

            $(btn).closest('tr').hide();

        }

        //метод который должен добавлять валидацию для новых строк в таблице. Но он вроде бы и не нужен
        //В случае использования в form id="CodeSByAnizForm", и в методе AddItem() в конце вызвать
        //rebindvalidators()
        function rebindvalidators(btn) {
            var $form = $("#CodeSByAnizForm");

            $form.unbind();

            $form.data("validator", null);

            $form.unobtrusive.parse($form);

            $from.validate($form.data("unobtrusiveValidation").options)
        }


        function getExRate(currencyid){

            var lstbox = document.getElementById('dropdownExRate');
            var txtExtrate = document.getElementById('txtExtrateRate');

            var items = lstbox.options;

            for (var i = items.length - 1; i >= 0; i--){
                if(items[i].value == currencyid.value){
                    txtExtrate.value = items[i].text;
                    return;
                }
            }
            return;
        }


    </script>

}
